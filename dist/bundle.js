(()=>{"use strict";var e={148:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.checkRowsAndColumns=r.checkGrid=void 0;var n=t(12);r.checkGrid=function(){var e;return null==(0,n.getCurrentGrid)()?(e="something went wrong with fetching the grid :S",alert(e),e):1!=o()?(e="the grid is not fully filled :S",alert(e),e):1!=i()&&1!=a()?(e="the grid is incorrect :S",alert(e),e):(e="the grid is correct :D. Well done!",alert(e),e)};var o=function(){for(var e=(0,n.getCurrentGrid)(),r=0;r<9;r++)for(var t=0;t<9;t++)if(""==e[r][t])return!1;return!0},i=function(){for(var e=(0,n.getCurrentGrid)(),r=new Array(9).fill(0),t=new Array(9).fill(0),o=0;o<9;o++){r.fill(0),t.fill(0);for(var i=0;i<9;i++){var a=Number.parseInt(e[o][i]),u=Number.parseInt(e[i][o]);if(r[a-1]++,t[u-1]++,1!=r[a-1])return!1;if(1!=t[u-1])return!1}}return!0};r.checkRowsAndColumns=i;var a=function(){return 1==u(0,2,0,2)&&1==u(0,2,3,5)&&1==u(0,2,6,8)&&1==u(3,5,0,2)&&1==u(3,5,6,8)&&1==u(3,5,0,2)&&1==u(5,8,0,2)&&1==u(5,8,3,5)&&1==u(5,8,5,8)},u=function(e,r,t,o){for(var i=(0,n.getCurrentGrid)(),a=new Array(9).fill(0),u=e;u<=r;u++)for(var d=t;d<=o;d++){var c=Number.parseInt(i[u][d]);if(a[c-1]++,a[c-1]>1)return!1}return!0}},12:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.getCurrentGrid=void 0,r.getCurrentGrid=function(){for(var e=[],r=0;r<9;r++)e[r]=new Array(9).fill("");var t=document.querySelectorAll(".cell");if(null===t)return[[""]];for(r=0;r<=8;r++)for(var n=0;n<=8;n++){var o=t[9*r+n];if(!(o instanceof HTMLElement))return[[""]];if(!o)return[[""]];var i=o.innerText;e[r][n]=i}return e}},284:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.clearBoard=void 0;var n=t(741);r.clearBoard=function(){!function(){var e=document.getElementById("grid");null!==e&&e.remove()}();var e=document.createElement("div");null!==e&&(e.id="grid",document.body.append(e),(0,n.createBoard)(function(){for(var e=[],r=0;r<9;r++)e[r]=new Array(9).fill("");return e}()))}},741:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.createBoard=void 0;var n=t(295);r.createBoard=function(e){var r=document.getElementById("grid");null!==r&&e.forEach((function(e,t){var n=document.createElement("div");null!==n&&(n.classList.add("row"),n.setAttribute("row","".concat(t)),2!=t&&5!=t||n.classList.add("underline"),r.append(n),e.forEach((function(e,r){var i=document.createElement("div");null!==i&&(i.setAttribute("row","".concat(t)),i.setAttribute("column","".concat(r)),i.classList.add("cell"),2!=r&&5!=r||i.classList.add("rightline"),""===e.toString()?(i.setAttribute("type","button"),i.addEventListener("click",o)):i.innerText=e.toString(),n.append(i))})))}))};var o=function(e){var r=e.target;if(r instanceof HTMLElement){var t=r.getAttribute("row"),o=r.getAttribute("column"),i=document.querySelector('[row="'.concat(t,'"][column="').concat(o,'"]'));if(i instanceof HTMLElement){var a;do{var u=prompt("Enter a number between 1 and 9:");if(null===u)return;a=Number.parseInt(u)}while(isNaN(Number(a)));if(!isNaN(Number(a))&&null!==i){var d;d=""===i.innerHTML?0:Number.parseInt(i.innerHTML),i.innerText=a.toString(),n.undoStack.push([Number.parseInt(t),Number.parseInt(o),d])}}}}},295:function(e,r){var t,n=this&&this.__extends||(t=function(e,r){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])},t(e,r)},function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)});Object.defineProperty(r,"__esModule",{value:!0}),r.undoStep=r.undoStack=void 0;var o=new(function(e){function r(r){void 0===r&&(r=1/0);var t=e.call(this)||this;return t.capacity=r,t}return n(r,e),r.prototype.push=function(e){if(this.isFull())throw Error("Stack has reached max capacity, you cannot add more items");this.storage.push(e)},r.prototype.pop=function(){return this.storage.pop()},r.prototype.peek=function(){return this.storage[this.size()-1]},r.prototype.isFull=function(){return this.capacity===this.size()},r}(function(){function e(){this.storage=[]}return e.prototype.size=function(){return this.storage.length},e}()));r.undoStack=o,r.undoStep=function(){if(null===o.peek()||void 0===o.peek()){var e="undoStack is null or undefined";return alert(e),e}if(0===o.size())return e="the undoStack is not yet built",alert(e),e;var r=o.pop();if(3!==r.length)return e="something went wrong with fetching an undoStack-element",alert(e),e;var t=document.querySelector('[row="'.concat(r[0],'"][column="').concat(r[1],'"]'));return console.log("undid row ".concat(r[0]+1," column ").concat(r[1]+1," from ").concat(t.innerHTML," to ").concat(r[2])),0===r[2]?t.innerHTML="":t.innerHTML=r[2].toString(),"good work mate"}},314:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.easyGrid2=r.easyGrid1=r.numOfEasyGrids=void 0,r.numOfEasyGrids=2,r.easyGrid1=[["8","2","7","3","","","","4","9"],["6","4","9","","5","","8","3",""],["","","","4","8","9","6","",""],["","","","6","","1","2","",""],["2","1","","","","7","","","6"],["4","9","","","","","1","5","7"],["1","8","","","2","4","7","",""],["","","","","7","3","","",""],["3","","4","1","","","","",""]],r.easyGrid2=[["4","9","","8","","","5","1",""],["","1","8","","5","","","","6"],["","","","","6","9","","","4"],["","","5","","","","6","",""],["","7","4","5","","6","2","9",""],["9","","","3","","","1","4","5"],["5","","","9","4","","","6",""],["","","9","2","7","5","","",""],["8","2","7","","3","1","","",""]]},380:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.hardGrid2=r.hardGrid1=r.numOfHardrids=void 0,r.numOfHardrids=2,r.hardGrid1=[["","8","9","3","7","","","4",""],["3","","","","","","","",""],["","","","1","","","2","",""],["","","","","","8","","","4"],["","7","6","","9","","","8",""],["","5","","","","","","",""],["5","","","","","","","6",""],["4","","","","3","","","",""],["","6","3","7","","","","","1"]],r.hardGrid2=[["","","8","1","","","5","",""],["7","","","9","","","","",""],["","","4","","5","7","","6",""],["2","","","","4","5","8","",""],["","8","","","","","","9",""],["","","","","1","","","",""],["","","","7","","","","",""],["4","","","","8","2","9","",""],["","","6","","","","","","3"]]},427:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.mediumGrid2=r.mediumGrid1=r.numOfMediumGrids=void 0,r.numOfMediumGrids=2,r.mediumGrid1=[["9","","","","","4","","",""],["","","5","","","","","6",""],["","7","","","1","2","","","5"],["","","","8","","","","",""],["3","","","","","","9","",""],["","2","","","7","5","","","6"],["2","","","","8","1","","3",""],["","","","4","","","","","1"],["","8","","6","","","","",""]],r.mediumGrid2=[["5","","","2","","","","4",""],["6","","","","3","","","","2"],["","","","","","","3","","1"],["","8","","","4","","9","1",""],["","1","","3","","","","",""],["","9","","7","","","","6",""],["","6","","","","8","","2",""],["7","","","4","","","","9",""],["","","","","","","","",""]]},610:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.getRandomHardGrid=r.getRandomMediumGrid=r.getRandomEasyGrid=void 0;var n=t(314),o=t(380),i=t(427);r.getRandomEasyGrid=function(){var e=Math.floor(100*Math.random()%n.numOfEasyGrids)+1,r="easyGrid".concat(e);return n[r]},r.getRandomMediumGrid=function(){var e=Math.floor(100*Math.random()%i.numOfMediumGrids)+1,r="mediumGrid".concat(e);return i[r]},r.getRandomHardGrid=function(){var e=Math.floor(100*Math.random()%o.numOfHardrids)+1,r="hardGrid".concat(e);return o[r]}}},r={};function t(n){var o=r[n];if(void 0!==o)return o.exports;var i=r[n]={exports:{}};return e[n].call(i.exports,i,i.exports,t),i.exports}(()=>{var e=t(148),r=t(741),n=t(284),o=t(295),i=t(610),a=document.getElementById("clear");null!==a?a.addEventListener("click",n.clearBoard):alert("we've got a problem with the check button :/");var u=document.getElementById("check");null!==u?u.addEventListener("click",e.checkGrid):alert("we've got a problem with the check button");var d=document.getElementById("undo");null!==d?d.addEventListener("click",o.undoStep):alert("we've got a problem with the undo button"),(0,r.createBoard)(i.getRandomEasyGrid())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,